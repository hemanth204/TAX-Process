<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_rtp_tax_return_p_gl_matrix</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>gl validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
var comp=current.tax_company.getDisplayValue();
	var state=current.tax_states.getDisplayValue();
	var rd=current.return_type.getDisplayValue();
	var glaf=current.g_l_account_for_form;
	var gla=current.g_l_account;
	var cc=current.cost_center;
	var oa=current.object_account;
	var sc=current.sub_account;
	var ex=current.explanation;
	var gL=new GlideRecord('x_rtp_tax_return_p_gl_matrix');
 	gL.tax_company=comp;
// 	gL.tax_states=state;
// 	gL.return_type=rd;
// 	gL.g_l_account_for_form=glaf;
// 	gL.g_l_account=gla;
// 	gL.cost_center=cc;
// 	gL.object_account=oa;
// 	gL.sub_account=sc;
// 	gL.explanation=ex;
// 	gs.addInfoMessage("compnay  "+gL.tax_company +gL.tax_states +gL.cost_center);
	gL.addQuery('tax_company',comp);
// 	gL.addQuery('tax_states',state );
// 	gL.addQuery('return_type', gL.return_type);
// 	gL.addQuery('g_l_account_for_form', gL.g_l_account_for_form);
// 	gL.addQuery('g_l_account', gL.g_l_account);
// 	gL.addQuery('cost_center', gL.cost_center);
// 	gL.addQuery('object_account',gL.object_account);
// 	gL.addQuery('sub_account', gL.sub_account);
// 	gL.addQuery('explanation', gL.explanation);
	gL.query();
	gs.addInfoMessage('***'+gL.tax_company);
	if (gL.hasNext()) {
		gs.addInfoMessage('There is duplicate record in the table');
		current.setAbortAction(true);
		}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>v-sivakrishnaiahb</sys_created_by>
        <sys_created_on>2018-01-24 12:22:43</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3c7f0da2dbbf8700e93fb96c4e9619a0</sys_id>
        <sys_mod_count>54</sys_mod_count>
        <sys_name>gl validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Tax Return Process" source="x_rtp_tax_return_p">9b1e5414db937a000713d5ab5e9619a1</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tax Return Process">9b1e5414db937a000713d5ab5e9619a1</sys_scope>
        <sys_update_name>sys_script_3c7f0da2dbbf8700e93fb96c4e9619a0</sys_update_name>
        <sys_updated_by>v-sivakrishnaiahb</sys_updated_by>
        <sys_updated_on>2018-01-24 14:44:57</sys_updated_on>
        <template/>
        <when>before_display</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3c7f0da2dbbf8700e93fb96c4e9619a0"/>
</record_update>
