<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>true</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_rtp_tax_return_p_tpf_sv</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Tax_GL_Account_Desc</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// Add your code here
	var comp=current.u_company.getDisplayValue();
	var state=current.tax_state.getDisplayValue();
	var rd=current.tax_return_type.getDisplayValue();
	var gL=new GlideRecord('x_rtp_tax_return_p_gl_account');
	gL.tax_company=comp;
	gL.tax_states=state;
	gL.return_description=rd;
	gL.addQuery('tax_number', current.sys_id);
	gL.addQuery('tax_company',comp);
	gL.addQuery('tax_states', '=', state);
	gL.addQuery('return_description', gL.return_description);
	gL.query();
	if (gL.hasNext()) {
		current.setAbortAction(true);
		}
	else{
		var gL1=new GlideRecord('x_rtp_tax_return_p_gl_account');
		gL1.addQuery('tax_number', current.sys_id);
		gL1.query();
		gL1.deleteMultiple();
		var gp='';
		var cc='';
		var exp='';
		var glacc='';
		var objacc='';
		var subacc='';
		var str=[];
		var str1=[];
		var str2=[];
		var str3=[];
		var str4=[];
		var str5=[];
		var company=current.u_company;
		var states=current.tax_state;
		var rtrnDes=current.tax_return_type;
		var taxGl= new GlideRecord('x_rtp_tax_return_p_gl_matrix');
		taxGl.addQuery('tax_company',company);
		taxGl.addQuery('tax_states',states);
		taxGl.addQuery('return_type',rtrnDes);
		taxGl.query();
		while(taxGl.next()) {
			gp += (',' + taxGl.g_l_account_for_form.toString());
			cc += (',' + taxGl.cost_center.toString());
			exp += (',' + taxGl.explanation.toString());
			glacc += (',' + taxGl.g_l_account.toString());
			objacc += (',' + taxGl.object_account.toString());
			subacc += (',' + taxGl.sub_account.toString());
			
		}
		var num=current.sys_id;
		var company1=current.u_company.getDisplayValue();
		var states1=current.tax_state.getDisplayValue();
		var rtrnDes1=current.tax_return_type.getDisplayValue();
		var taxxGl= new GlideRecord('x_rtp_tax_return_p_gl_account');
		taxxGl.query();
		str = gp.split(",");
		str1=cc.split(",");
		str2=exp.split(",");
		str3=glacc.split(",");
		str4=objacc.split(",");
		str5=subacc.split(",");
			
	for (var i = 1; i<str.length; i++) {
			taxxGl.tax_company=company1;
			taxxGl.tax_states=states1;
			taxxGl.return_description=rtrnDes1;
			taxxGl.tax_number=num;
			taxxGl.gl_account_desc=str[i];
			taxxGl.cost_center=str1[i];
			taxxGl.explanation=str2[i];
			taxxGl.gl_account=str3[i];
			taxxGl.object_account=str4[i];
			taxxGl.sub_account=str5[i];
			taxxGl.insert();			
		}
		}
		var credit = 0;
		var debit= 0;
	    var total = 0;
		var gr = new GlideRecord('x_rtp_tax_return_p_gl_account');
		gr.addQuery('tax_number', current.sys_id);
		gr.addQuery('tax_company', comp);
		gr.addQuery('tax_states', '=', state);
		gr.addQuery('return_description', gL.return_description);
	    gr.addEncodedQuery('gl_account_descLIKEcash');
		gr.query();
		while(gr.next()){
			credit = parseFloat(credit) + parseFloat(gr.credit);
			debit=parseFloat(debit) + parseFloat(gr.debit);
			current.tax_pymt_manual_entry = 'false';
		}
		//gs.addInfoMessage("credit & debit  "+credit +debit);
		//var total=debit-credit;
	     total=credit-debit;
	//gs.addInfoMessage("Value is "+current.tax_pymt_manual_entry);
		if(current.tax_pymt_manual_entry == false)
		{
			//gs.addInfoMessage("Inside loop");
			current.payment=total;
		}
var allcredit=0; var alldebit=0; var alltotal=0;
	var allAcct=new GlideRecord('x_rtp_tax_return_p_gl_account');
	allAcct.tax_company=comp;
	allAcct.tax_states=state;
	allAcct.return_description=rd;
	//gs.addInfoMessage("compnay  "+gL.tax_company +gL.tax_states +gL.return_description);
	allAcct.addQuery('tax_number', current.sys_id);
	allAcct.addQuery('tax_company',comp);
	allAcct.addQuery('tax_states', '=', state);
	allAcct.addQuery('return_description', allAcct.return_description);
	allAcct.query();
	
	while(allAcct.next()){
		 allcredit = parseFloat(allcredit) + parseFloat(allAcct.credit);
		 alldebit=parseFloat(alldebit) + parseFloat(allAcct.debit);
	}	
	 alltotal=allcredit-alldebit;
	current.tax_gl_pymt_amt=alltotal;
 	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>v-hemanthsiramdasu</sys_created_by>
        <sys_created_on>2017-11-21 05:52:00</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>19be4e75dba68b80e93fb96c4e9619ec</sys_id>
        <sys_mod_count>63</sys_mod_count>
        <sys_name>Tax_GL_Account_Desc</sys_name>
        <sys_overrides/>
        <sys_package display_value="Tax Return Process" source="x_rtp_tax_return_p">9b1e5414db937a000713d5ab5e9619a1</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tax Return Process">9b1e5414db937a000713d5ab5e9619a1</sys_scope>
        <sys_update_name>sys_script_19be4e75dba68b80e93fb96c4e9619ec</sys_update_name>
        <sys_updated_by>v-hemanthsiramdasu</sys_updated_by>
        <sys_updated_on>2018-01-25 05:15:01</sys_updated_on>
        <template/>
        <when>before_display</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=19be4e75dba68b80e93fb96c4e9619ec"/>
</record_update>
